@model IdentityRole
@inject UserManager<ApplicationUser> _userManager
@{
    var users = await _userManager.GetUsersInRoleAsync(Model.Name);
    ViewData["Title"] = "Details";
}

<h1 class="text-center m-4">Role Details</h1>

<div>

    <partial name="PartialViews/ReadonlyForms" model="@Model" />
    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning m-3">Edit</a>
    <a asp-action="Index" class="btn btn-info m-3">Back To list</a>
    <h3 class="h1 m-5">The Users Who Have This Role</h3>
    @if(users.Count() > 0)
    {
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(c => c.Name)</th>
                <th>Details</th>
                <th>Edit</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var u in users)
            {
                <tr>
                    <td>@u.UserName</td>
                    <td><a asp-controller="User" asp-action="Details" asp-route-id="@u.Id" class="btn btn-warning">Details</a></td>
                    <td><a asp-controller="User" asp-action="Edit" asp-route-id="@u.Id" class="btn btn-info">update</a></td>
                    <td><a asp-controller="User" asp-action="Delete" asp-route-id="@u.Id" class="btn btn-danger">Delete</a></td>
                </tr>
            }
        </tbody>
    </table>
    }
    else
    {
    <h2 class="bg-warning">No Roles Available</h2>
    }
</div>
