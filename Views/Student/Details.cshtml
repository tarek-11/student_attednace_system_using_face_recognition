@model StudentModel
@inject IUnitOfWork _unitOfWork
@{
    ViewData["Title"] = "Details";
    var sessions = await _unitOfWork._sessionRepository.GetSessionsByStudentAsync(Model.Id);
}

<h1 class="text-center m-4">Student Details</h1>

<div>

    <partial name="PartialViews/ReadonlyForms" model="@Model" />
    @if (User.IsInRole("Admin"))
    {
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning m-3">Edit</a>
    }

    <a asp-action="Index" class="btn btn-info m-3">Back To list</a>

    <h1 class="my-4 text-center">Sessions This Student Attended</h1>

    @{
        if (sessions.Count() > 0)
        {
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(c => c.Sessions.FirstOrDefault().Id)</th>
                        <th>@Html.DisplayNameFor(c => c.Sessions.FirstOrDefault().Course.Name)</th>
                        <th>@Html.DisplayNameFor(c => c.Sessions.FirstOrDefault().SessionTime)</th>
                        <th>@Html.DisplayNameFor(c => c.Sessions.FirstOrDefault().SessionType)</th>
                        
                    </tr>
                </thead>
                <tbody>
                    @foreach (var c in sessions)
                    {
                        var course =await _unitOfWork._courseRepository.Get(c.CourseId);
                        <tr>
                            <td>@c.Id</td>
                            <td>@course.Name</td>
                            <td>@c.SessionTime</td>
                            <td>@c.SessionType</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <h2 class="bg-warning">No Sessions Available</h2>
        }
    }


</div>
